{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/danae/Documents/Sem4/Reto%20-%20Construccion%20de%20software/MIX-2/src/app/contacts/newcontact/page.tsx"],"sourcesContent":["import React, { ChangeEvent } from \"react\";\r\n\r\ninterface InputProps {\r\n  label: string;\r\n  name: string;\r\n  type: string;\r\n  value: string;\r\n  onChange: (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => void;\r\n  options?: string[]; // Opciones para el select\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  options = [], // Si es un select, las opciones se pasan aquÃ­\r\n  required = false,\r\n  disabled = false,\r\n}) => {\r\n  if (type === \"select\") {\r\n    return (\r\n      <div className=\"mb-4\">\r\n        <label htmlFor={name} className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          {label}\r\n        </label>\r\n        <select\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n          required={required}\r\n          disabled={disabled}\r\n          className=\"w-full px-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n        >\r\n          <option value=\"\">Select {label}</option>\r\n          {options.map((option, index) => (\r\n            <option key={index} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name} className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n        {label}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        required={required}\r\n        disabled={disabled}\r\n        className=\"w-full px-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"],"names":[],"mappings":";;;;;AAaA,MAAM,QAA8B,CAAC,EACnC,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,UAAU,EAAE,EACZ,WAAW,KAAK,EAChB,WAAW,KAAK,EACjB;IACC,IAAI,SAAS,UAAU;QACrB,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAM,SAAS;oBAAM,WAAU;8BAC7B;;;;;;8BAEH,8OAAC;oBACC,MAAM;oBACN,OAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,WAAU;;sCAEV,8OAAC;4BAAO,OAAM;;gCAAG;gCAAQ;;;;;;;wBACxB,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC;gCAAmB,OAAO;0CACxB;+BADU;;;;;;;;;;;;;;;;;IAOvB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,SAAS;gBAAM,WAAU;0BAC7B;;;;;;0BAEH,8OAAC;gBACC,MAAM;gBACN,MAAM;gBACN,OAAO;gBACP,UAAU;gBACV,UAAU;gBACV,UAAU;gBACV,WAAU;;;;;;;;;;;;AAIlB;uCAEe"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/danae/Documents/Sem4/Reto%20-%20Construccion%20de%20software/MIX-2/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AAkBA,SAASE,IAAI,EAAEC,KAAK,GAAE;AAjBtB,SAASH,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAWd,8BAA8B;IAI5BO,SAASC;;;;;;;;IACTC,WAAWC,0DAAAA;AACb,EAAC,QAAA;AAED,MAAA,OAAA;IAAc;IAAA,iCAAoC;QAElD,YAAA;YAAA;YAAA,mCAA4D;gBAC5D,OAAO,KAAA;oBAAMC;oBAAc,IAAIX,mBAAmB;4BAChDY,QAAAA;4BAAAA,GAAY;4BAAA;iCACVC,MAAMZ,UAAUa,QAAQ;sCACxBC,IAAAA,CAAM,CAAA;gCAAA,QAAA;oCAAA,IAAA;oCAAA;iCAAA;;+BACNC,UAAU;;yBACV,2CAA2C;8BAC3CC,IAAAA,CAAAA;oBAAAA;iBAAAA,CAAY;;iBACZC,UAAU;sBACVC,IAAAA,CAAAA;YAAAA,CAAU;SAAA,CAAE;;KACd;UACAC,QAAAA;YAAAA,CAAU,GAAA;YAAA;SAAA;cACRC,OAAAA;YAAAA,IAAYnB;YAAAA;SAAAA;UACd,WAAA;YAAA,IAAA;YAAA;SAAA;QACF,CAAE,eAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}