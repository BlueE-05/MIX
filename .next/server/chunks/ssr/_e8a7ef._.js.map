{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/danae/Documents/Sem4/Reto%20-%20Construccion%20de%20software/mix/src/components/Table.tsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\ninterface TableProps {\r\n  columns: string[];\r\n  selectableColumns: string[];\r\n  options: string[][];\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ columns, selectableColumns, options }) => {\r\n  const [data, setData] = useState([\r\n    { id: 1, textValues: [\"Item 1\", \"Desc 1\"], selectValues: [\"Option 1\"] },\r\n    { id: 2, textValues: [\"Item 2\", \"Desc 2\"], selectValues: [\"Option 2\"] },\r\n  ]);\r\n  const [selectedRows, setSelectedRows] = useState<number[]>([]);\r\n\r\n  const handleTextChange = (rowIndex: number, colIndex: number, value: string) => {\r\n    const newData = [...data];\r\n    newData[rowIndex].textValues[colIndex] = value;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleSelectChange = (rowIndex: number, colIndex: number, value: string) => {\r\n    const newData = [...data];\r\n    newData[rowIndex].selectValues[colIndex] = value;\r\n    setData(newData);\r\n  };\r\n\r\n  const handleCheckboxChange = (id: number) => {\r\n    setSelectedRows((prev) =>\r\n      prev.includes(id) ? prev.filter((rowId) => rowId !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <table className=\"min-w-full bg-white border border-gray-300\">\r\n        <thead>\r\n          <tr className=\"bg-gray-200\">\r\n            <th className=\"p-2 border\">Select</th>\r\n            {columns.map((col, index) => (\r\n              <th key={index} className=\"p-2 border\">{col}</th>\r\n            ))}\r\n            {selectableColumns.map((col, index) => (\r\n              <th key={index} className=\"p-2 border\">{col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((row, rowIndex) => (\r\n            <tr key={row.id} className=\"border\">\r\n              <td className=\"p-2 border text-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedRows.includes(row.id)}\r\n                  onChange={() => handleCheckboxChange(row.id)}\r\n                />\r\n              </td>\r\n              {row.textValues.map((value, colIndex) => (\r\n                <td key={colIndex} className=\"p-2 border\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => handleTextChange(rowIndex, colIndex, e.target.value)}\r\n                    className=\"w-full border rounded p-1\"\r\n                  />\r\n                </td>\r\n              ))}\r\n              {row.selectValues.map((value, colIndex) => (\r\n                <td key={colIndex} className=\"p-2 border\">\r\n                  <select\r\n                    value={value}\r\n                    onChange={(e) => handleSelectChange(rowIndex, colIndex, e.target.value)}\r\n                    className=\"w-full border rounded p-1\"\r\n                  >\r\n                    {options[colIndex].map((opt, optIndex) => (\r\n                      <option key={optIndex} value={opt}>{opt}</option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;"],"names":[],"mappings":";;;;AAAA;;;AAQA,MAAM,QAA8B,CAAC,EAAE,OAAO,EAAE,iBAAiB,EAAE,OAAO,EAAE;IAC1E,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B;YAAE,IAAI;YAAG,YAAY;gBAAC;gBAAU;aAAS;YAAE,cAAc;gBAAC;aAAW;QAAC;QACtE;YAAE,IAAI;YAAG,YAAY;gBAAC;gBAAU;aAAS;YAAE,cAAc;gBAAC;aAAW;QAAC;KACvE;IACD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAE7D,MAAM,mBAAmB,CAAC,UAAkB,UAAkB;QAC5D,MAAM,UAAU;eAAI;SAAK;QACzB,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,GAAG;QACzC,QAAQ;IACV;IAEA,MAAM,qBAAqB,CAAC,UAAkB,UAAkB;QAC9D,MAAM,UAAU;eAAI;SAAK;QACzB,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,GAAG;QAC3C,QAAQ;IACV;IAEA,MAAM,uBAAuB,CAAC;QAC5B,gBAAgB,CAAC,OACf,KAAK,QAAQ,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,QAAU,UAAU,MAAM;mBAAI;gBAAM;aAAG;IAE5E;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAM,WAAU;;8BACf,8OAAC;8BACC,cAAA,8OAAC;wBAAG,WAAU;;0CACZ,8OAAC;gCAAG,WAAU;0CAAa;;;;;;4BAC1B,QAAQ,GAAG,CAAC,CAAC,KAAK,sBACjB,8OAAC;oCAAe,WAAU;8CAAc;mCAA/B;;;;;4BAEV,kBAAkB,GAAG,CAAC,CAAC,KAAK,sBAC3B,8OAAC;oCAAe,WAAU;8CAAc;mCAA/B;;;;;;;;;;;;;;;;8BAIf,8OAAC;8BACE,KAAK,GAAG,CAAC,CAAC,KAAK,yBACd,8OAAC;4BAAgB,WAAU;;8CACzB,8OAAC;oCAAG,WAAU;8CACZ,cAAA,8OAAC;wCACC,MAAK;wCACL,SAAS,aAAa,QAAQ,CAAC,IAAI,EAAE;wCACrC,UAAU,IAAM,qBAAqB,IAAI,EAAE;;;;;;;;;;;gCAG9C,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,yBAC1B,8OAAC;wCAAkB,WAAU;kDAC3B,cAAA,8OAAC;4CACC,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,iBAAiB,UAAU,UAAU,EAAE,MAAM,CAAC,KAAK;4CACpE,WAAU;;;;;;uCALL;;;;;gCASV,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,yBAC5B,8OAAC;wCAAkB,WAAU;kDAC3B,cAAA,8OAAC;4CACC,OAAO;4CACP,UAAU,CAAC,IAAM,mBAAmB,UAAU,UAAU,EAAE,MAAM,CAAC,KAAK;4CACtE,WAAU;sDAET,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,yBAC3B,8OAAC;oDAAsB,OAAO;8DAAM;mDAAvB;;;;;;;;;;uCAPV;;;;;;2BAnBJ,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;AAqC3B;uCAEe"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/danae/Documents/Sem4/Reto%20-%20Construccion%20de%20software/mix/src/app/Contacts/page.tsx"],"sourcesContent":["import Table from \"@/components/Table\";\r\n\r\nexport default function Contacts() {\r\n  return (\r\n    <main className=\"min-h-screen justify-center\">\r\n        <Table\r\n        columns={[\"Nombre\", \"Descripción\"]}\r\n        selectableColumns={[\"Categoría\"]}\r\n        options={[[\"Opción 1\", \"Opción 2\", \"Opción 3\"]]}\r\n        />\r\n    </main>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAK,WAAU;kBACZ,cAAA,8OAAC,2HAAA,CAAA,UAAK;YACN,SAAS;gBAAC;gBAAU;aAAc;YAClC,mBAAmB;gBAAC;aAAY;YAChC,SAAS;gBAAC;oBAAC;oBAAY;oBAAY;iBAAW;aAAC;;;;;;;;;;;AAIvD"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/danae/Documents/Sem4/Reto%20-%20Construccion%20de%20software/mix/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,iTAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}