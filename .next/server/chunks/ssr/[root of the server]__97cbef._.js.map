{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/danae/Documents/Sem4/Reto%20-%20Construccion%20de%20software/MIX-2/src/components/Forms/Input.tsx"],"sourcesContent":["import React, { ChangeEvent } from \"react\";\r\n\r\ninterface InputProps {\r\n  label: string;\r\n  name: string;\r\n  type: string;\r\n  value: string;\r\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required = false,\r\n  disabled = false,\r\n}) => {\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <label htmlFor={name} className=\"block text-sm font-bold text-gray-700 mb-2\">\r\n        {label}\r\n        {required && <span className=\"font-bold text-md text-red-600\">*</span>}\r\n      </label>\r\n      <input type={type} name={name} value={value} onChange={onChange} required={required} disabled={disabled}\r\n        className=\"w-full px-4 py-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-stone-900\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;"],"names":[],"mappings":";;;;;AAYA,MAAM,QAA8B,CAAC,EACnC,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,WAAW,KAAK,EAChB,WAAW,KAAK,EACjB;IACC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAM,SAAS;gBAAM,WAAU;;oBAC7B;oBACA,0BAAY,8OAAC;wBAAK,WAAU;kCAAiC;;;;;;;;;;;;0BAEhE,8OAAC;gBAAM,MAAM;gBAAM,MAAM;gBAAM,OAAO;gBAAO,UAAU;gBAAU,UAAU;gBAAU,UAAU;gBAC7F,WAAU;;;;;;;;;;;;AAGlB;uCAEe"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/danae/Documents/Sem4/Reto%20-%20Construccion%20de%20software/MIX-2/src/components/Buttons/RoundedButton.tsx"],"sourcesContent":["import { LucideIcon } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\n\r\ninterface RoundedButtonProps {\r\n    color: string;\r\n    text: string;\r\n    Icon?: LucideIcon;\r\n    link?: string;\r\n    onChange?: () => void; // Agregado el prop onChange\r\n}\r\n\r\nconst RoundedButton = ({ color, text, Icon, link, onChange }: RoundedButtonProps) => {\r\n    const handleClick = () => {\r\n        if (onChange) {\r\n            onChange(); // Ejecutamos la función onChange si se proporciona\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Link href={link || \"#\"} passHref>\r\n            <button\r\n                className=\"flex justify-center items-center p-5 rounded-xl text-white transition-all duration-200 hover:brightness-90\"\r\n                style={{ backgroundColor: color }}\r\n                onClick={handleClick} // Añadimos el onClick para manejar el onChange\r\n            >\r\n                {Icon && <Icon className=\"mr-2\" size={20} />}\r\n                {text}\r\n            </button>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default RoundedButton;"],"names":[],"mappings":";;;;AACA;;;AAUA,MAAM,gBAAgB,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAsB;IAC5E,MAAM,cAAc;QAChB,IAAI,UAAU;YACV,YAAY,mDAAmD;QACnE;IACJ;IAEA,qBACI,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM,QAAQ;QAAK,QAAQ;kBAC7B,cAAA,8OAAC;YACG,WAAU;YACV,OAAO;gBAAE,iBAAiB;YAAM;YAChC,SAAS;;gBAER,sBAAQ,8OAAC;oBAAK,WAAU;oBAAO,MAAM;;;;;;gBACrC;;;;;;;;;;;;AAIjB;uCAEe"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}